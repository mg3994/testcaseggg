(()=>{"use strict";var e={20:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNonce=void 0;const i=s(5);t.getNonce=function(){const e=i.webcrypto.getRandomValues(new Uint8Array(32));return Buffer.from(e).toString("base64")}},102:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PortsViewComponent=void 0;const i=s(496),r=s(275),o=s(891),n=s(290),a=s(349),c=s(167),d=s(223),l="Open Settings",p="Open Preview",_="Manage Ports",P="View Ports";function u(e){return Date.now()-e.getTime()}t.PortsViewComponent=class{constructor(){this.portLastNotifyTimes=new Map,this.anyPortsLastNotifyTime=null}activate(e){e.subscriptions.push(i.commands.registerCommand(o.PORTS_VIEW_OPEN_SETTINGS_COMMAND,(()=>{i.commands.executeCommand("workbench.action.openSettings",`${o.PORTS_VIEW_COMPONENT_CONFIG_PATH}`)}))),e.subscriptions.push(i.commands.registerCommand(o.PORTS_VIEW_FOCUS_PANE_COMMAND,(()=>{(0,r.getConfig)().get(o.PORTS_VIEW_ENABLED_OPTION)?i.commands.executeCommand(`${o.PORTS_VIEW_VIEW_ID}.focus`):this.promptEnable()})));const t=new a.ProcListeningPortWatcher;t.on("open",(e=>this.notifyNewPorts(e))),t.start(),e.subscriptions.push(i.Disposable.from(t));const s=new n.PortsViewProvider(e.extensionUri,t,new c.PortsViewState(e));return e.subscriptions.push(i.window.registerWebviewViewProvider(o.PORTS_VIEW_VIEW_ID,s,{webviewOptions:{retainContextWhenHidden:!0}})),e.subscriptions.push(i.workspace.onDidChangeConfiguration((e=>{e.affectsConfiguration(o.PORTS_VIEW_COMPONENT_CONFIG_PATH)&&s.refreshView()}))),this}async promptEnable(){await i.window.showInformationMessage("The ports viewer component needs to be enabled before the ports panel can be opened. Open settings to enable the component?",l,"Close")===l&&i.commands.executeCommand("workbench.action.openSettings",`${o.EXTENSION_CONFIG_NAMESPACE}.${o.PORTS_VIEW_ENABLED_OPTION}`)}async notifyNewPorts(e){const t=(0,r.getConfig)(),s=t.get(o.PORTS_VIEW_ENABLED_OPTION),i=t.get(o.PORTS_VIEW_NOTIFY_ON_LISTEN_OPTION);if(!s||!i)return;const n=t.get(o.PORTS_VIEW_IGNORED_PORTS_OPTION)??[],a=(0,d.filterPreviewableAddresses)(e).filter((e=>!n.includes(e)));a.length&&(1===a.length?this.notifyPortListening(a[0]):this.notifyMultiplePortsListening())}async notifyPortListening(e){if(this.anyPortsLastNotifyTime&&u(this.anyPortsLastNotifyTime)<=3e4)return void this.notifyMultiplePortsListening();if(Array.from(this.portLastNotifyTimes.entries()).filter((([t,s])=>e!==t&&u(s)<=2e4)).length>0)return this.portLastNotifyTimes.set(e,new Date),void this.notifyMultiplePortsListening();if(this.portLastNotifyTimes.has(e)&&u(this.portLastNotifyTimes.get(e))<=1e4)return void this.portLastNotifyTimes.set(e,new Date);this.portLastNotifyTimes.set(e,new Date);const t=await i.window.showInformationMessage(`The service listening on port ${e} is now available for web preview.`,p,_);t===p&&i.env.openExternal(i.Uri.parse((0,d.getPortPreviewLink)(e))),t===_&&i.commands.executeCommand(`${o.PORTS_VIEW_VIEW_ID}.focus`)}async notifyMultiplePortsListening(){this.anyPortsLastNotifyTime&&u(this.anyPortsLastNotifyTime)<=3e4?this.anyPortsLastNotifyTime=new Date:(this.anyPortsLastNotifyTime=new Date,await i.window.showInformationMessage("Multiple ports are now available for web preview.",P)===P&&i.commands.executeCommand(`${o.PORTS_VIEW_VIEW_ID}.focus`))}}},223:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.filterPreviewableAddresses=t.getPortPreviewLink=t.getWebPreviewHostname=void 0;const s=["127.0.0.1","0.0.0.0","0000:0000:0000:0000:0000:0000:0000:0000","::1","0000:0000:0000:0000:0000:0000:0000:0001"];function i(){if(!process.env.WEB_HOST)throw new Error("Unable to generate preview URLs because $WEB_HOST is missing");return process.env.WEB_HOST}t.getWebPreviewHostname=i,t.getPortPreviewLink=function(e){return`https://${e}-${i()}`},t.filterPreviewableAddresses=function(e){const t=e.filter((e=>s.includes(e.ipAddress))).map((e=>e.port)).filter((e=>e>=1024&&e<=65535));return[...new Set(t)]}},275:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getConfig=void 0;const i=s(496),r=s(891);t.getConfig=function(){return i.workspace.getConfiguration(r.EXTENSION_CONFIG_NAMESPACE)}},891:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PORTS_VIEW_AUTO_REMOVE_AGE_OPTION=t.PORTS_VIEW_IGNORED_PORTS_OPTION=t.PORTS_VIEW_NOTIFY_ON_LISTEN_OPTION=t.PORTS_VIEW_ENABLED_OPTION=t.PORTS_VIEW_OPEN_SETTINGS_COMMAND=t.PORTS_VIEW_FOCUS_PANE_COMMAND=t.PORTS_VIEW_VIEW_ID=t.PORTS_VIEW_COMPONENT_CONFIG_PATH=t.EXTENSION_CONFIG_NAMESPACE=t.EXTENSION_NAME=void 0,t.EXTENSION_NAME="cloudworkstations",t.EXTENSION_CONFIG_NAMESPACE="cloudWorkstations",t.PORTS_VIEW_COMPONENT_CONFIG_PATH=`${t.EXTENSION_CONFIG_NAMESPACE}.portsView`,t.PORTS_VIEW_VIEW_ID="cloudWorkstations.portsViewView",t.PORTS_VIEW_FOCUS_PANE_COMMAND="cloudWorkstations.portsView.focusPane",t.PORTS_VIEW_OPEN_SETTINGS_COMMAND="cloudWorkstations.portsView.openSettings",t.PORTS_VIEW_ENABLED_OPTION="portsView.enabled",t.PORTS_VIEW_NOTIFY_ON_LISTEN_OPTION="portsView.notifyOnListen",t.PORTS_VIEW_IGNORED_PORTS_OPTION="portsView.ignoredPortNumbers",t.PORTS_VIEW_AUTO_REMOVE_AGE_OPTION="portsView.autoRemoveAge"},290:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PortsViewProvider=void 0;const i=s(496),r=s(20),o=s(223),n=s(275),a=s(891),c=s(508),d=s(388);t.PortsViewProvider=class{constructor(e,t,s){this.extensionUri=e,this.portWatcher=t,this.state=s,this.portWatcher.on("change",(()=>this.refreshView()))}resolveWebviewView(e,t,s){this.view=e;const i=e.webview;i.html=this.getHtmlForWebview(e.webview),i.options={enableScripts:!0,localResourceRoots:[this.extensionUri]},i.onDidReceiveMessage((e=>{this.handleMessage(e.type,e?.data)})),this?.view.onDidDispose((()=>{this.view=void 0}))}sendMessage(e,t){this.view?.webview.postMessage({type:e,data:t})}handleMessage(e,t){e===d.PortsWebviewMessageType.LIST_PORTS_REQUEST&&this.refreshView()}async refreshView(){if(!this.view)return;const e=(0,n.getConfig)(),t=e.get(a.PORTS_VIEW_IGNORED_PORTS_OPTION)??[],s=e.get(a.PORTS_VIEW_AUTO_REMOVE_AGE_OPTION),i=await(0,c.getListeningPorts)(),r=(0,o.filterPreviewableAddresses)(i).filter((e=>!t.includes(e)));for(const e of r)this.state.trackPort(e);const l=this.state.getRecentlyUsedPorts(s).filter((e=>!t.includes(e)));let p;try{p={previewUrlBase:(0,o.getWebPreviewHostname)(),ports:r,recentlyUsedPorts:l}}catch(e){p={error:e,previewUrlBase:"",ports:r,recentlyUsedPorts:l}}this.updateBadge(r),this.sendMessage(d.PortsWebviewMessageType.PORTS_INFO_RESPONSE,p)}updateBadge(e){if(!this.view)return;const t=e.length,s=t>0?`${t} listening`:"None listening";this.view.badge={tooltip:s,value:t}}getWebviewResourceUri(e,t,s="dist/webview"){return e.asWebviewUri(i.Uri.joinPath(this.extensionUri,s,t))}getHtmlForWebview(e){const t=(0,r.getNonce)(),s=this.getWebviewResourceUri(e,"ports.js"),i=this.getWebviewResourceUri(e,"main.css");return`<!DOCTYPE html>\n      <html lang="en">\n      <head>\n        <meta charset="UTF-8">\n        <meta http-equiv="Content-Security-Policy" content="\n            default-src 'none';\n            style-src ${e.cspSource};\n            script-src 'nonce-${t}';\n            font-src ${e.cspSource};">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n\n        <title>Cloud Workstations - Ports Viewer</title>\n        <link href="${i}" rel="stylesheet" />\n      </head>\n      <body>\n        <div id="app"></div>\n        <script nonce="${t}" type="module" src="${s}"><\/script>\n      </body>\n      </html>`}}},551:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toSocketAddressString=t.parseSocketAddress=void 0,t.parseSocketAddress=function(e){const t=e.lastIndexOf(":");return{ipAddress:e.slice(0,t),port:parseInt(e.slice(t+1),10)}},t.toSocketAddressString=function(e){return`${e.ipAddress}:${e.port}`}},508:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getListeningPorts=t.getListeningProcesses=void 0;const i=s(324);t.getListeningProcesses=async function(){throw new Error("Proc-based scanner does not support grouping by process.")},t.getListeningPorts=async function(){return(await(0,i.getAllActiveSockets)()).filter((e=>e.state===i.TcpState.LISTEN)).map((e=>e.localAddr))}},324:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getAllActiveSockets=t.getActiveSockets6=t.getActiveSockets=t.TcpState=void 0;const i=s(561);function r(e){const t=e.split(":"),s=parseInt(t[0],16);return{ipAddress:[255&s,s>>8&255,s>>16&255,s>>24&255].join("."),port:parseInt(t[1],16)}}function o(e){const t=e.split(":");return{ipAddress:(s=function(e){if(32!==e.length)throw new Error("Unable to split invalid IPv6 address.");return[e.slice(0,8),e.slice(8,16),e.slice(16,24),e.slice(24,32)]}(t[0]).map((e=>{return[n((t=e).substring(4,8)),n(t.substring(0,4))];var t})).flat().join(":"),s.split(":").map((e=>parseInt(e,16).toString(16).padStart(4,"0"))).join(":")),port:parseInt(t[1],16)};var s}function n(e){return e.substring(2,4)+e.substring(0,2)}async function a(e){const t=await async function(e){const t=(await i.promises.readFile(e,"utf8")).split("\n").map((e=>e.trim())).filter((e=>!!e));return{header:t[0],entries:t.slice(1)}}(e);return t.entries.map((e=>{return{localAddress:(t=e.split(/\s+/))[1],remoteAddress:t[2],connectionState:t[3],uid:t[7],inode:t[9]};var t}))}async function c(){return(await a("/proc/net/tcp")).map((e=>{return{localAddr:r((t=e).localAddress),remoteAddr:r(t.remoteAddress),state:parseInt(t.connectionState,16),inode:Number(t.inode),uid:Number(t.uid)};var t}))}async function d(){return(await a("/proc/net/tcp6")).map((e=>{return{localAddr:o((t=e).localAddress),remoteAddr:o(t.remoteAddress),state:parseInt(t.connectionState,16),inode:Number(t.inode),uid:Number(t.uid)};var t}))}var l;(l=t.TcpState||(t.TcpState={}))[l.ESTABLISHED=1]="ESTABLISHED",l[l.SYN_SENT=2]="SYN_SENT",l[l.SYN_RECV=3]="SYN_RECV",l[l.FIN_WAIT1=4]="FIN_WAIT1",l[l.FIN_WAIT2=5]="FIN_WAIT2",l[l.TIME_WAIT=6]="TIME_WAIT",l[l.CLOSE=7]="CLOSE",l[l.CLOSE_WAIT=8]="CLOSE_WAIT",l[l.LAST_ACK=9]="LAST_ACK",l[l.LISTEN=10]="LISTEN",l[l.CLOSING=11]="CLOSING",l[l.NEW_SYN_RECV=12]="NEW_SYN_RECV",t.getActiveSockets=c,t.getActiveSockets6=d,t.getAllActiveSockets=async function(){return(await c()).concat(await d())}},349:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ProcListeningPortWatcher=void 0;const i=s(673),r=s(551),o=s(508);class n extends i.EventEmitter{constructor(e=1e3){super(),this.pollingIntervalMs=e,this.lastFetch=[]}async start(){if(this.pollTimer)throw new Error("Start called on a watcher that was already running.");this.lastFetch=await(0,o.getListeningPorts)(),this.pollTimer=setInterval((()=>{this.pollPorts()}),this.pollingIntervalMs)}stop(){return!!this.pollTimer&&(clearInterval(this.pollTimer),!0)}async pollPorts(){const e=await(0,o.getListeningPorts)();this.refreshPorts(e),this.lastFetch=e}refreshPorts(e){const t=this.lastFetch.map((e=>(0,r.toSocketAddressString)(e))),s=e.map((e=>(0,r.toSocketAddressString)(e))),i=s.filter((e=>!t.includes(e))),o=t.filter((e=>!s.includes(e)));i.length&&this.emit("open",i.map((e=>(0,r.parseSocketAddress)(e)))),o.length&&this.emit("close",o.map((e=>(0,r.parseSocketAddress)(e)))),(i.length||o.length)&&this.emit("change")}dispose(){this.stop(),this.removeAllListeners()}}t.ProcListeningPortWatcher=n},388:(e,t)=>{var s;Object.defineProperty(t,"__esModule",{value:!0}),t.PortsWebviewMessageType=void 0,(s=t.PortsWebviewMessageType||(t.PortsWebviewMessageType={})).LIST_PORTS_REQUEST="listPorts",s.PORTS_INFO_RESPONSE="portsInfo"},167:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PortsViewState=void 0;const s="portsViewState";function i(){return Math.round(Date.now()/1e3)}t.PortsViewState=class{constructor(e){this.context=e,this.state=this.loadPrevious()}loadPrevious(){const e=this.context.workspaceState.get(s),t={recentlyUsedPorts:{}};return e?{recentlyUsedPorts:Object.assign(t.recentlyUsedPorts,e?.recentlyUsedPorts??{})}:t}commit(){this.context.workspaceState.update(s,this.state)}trackPort(e){this.state.recentlyUsedPorts[e]=i(),this.commit()}getRecentlyUsedPorts(e=604800){const t=i();return this.listTrackedPorts().filter((s=>this.state.recentlyUsedPorts[s]+e>=t))}listTrackedPorts(){return Object.keys(this.state.recentlyUsedPorts).map((e=>Number(e)))}}},496:e=>{e.exports=require("vscode")},5:e=>{e.exports=require("node:crypto")},673:e=>{e.exports=require("node:events")},561:e=>{e.exports=require("node:fs")}},t={};function s(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,s),o.exports}var i={};(()=>{var e=i;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=s(102);e.activate=function(e){(new t.PortsViewComponent).activate(e)},e.deactivate=function(){}})(),module.exports=i})();